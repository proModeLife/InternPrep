{"id":954452111,"lang":"python3","lang_name":"Python3","time":"2 weeks, 3 days","timestamp":1684665795,"status":10,"status_display":"Accepted","runtime":"39 ms","url":"/submissions/detail/954452111/","is_pending":"Not Pending","title":"Word Search","memory":"16.5 MB","code":"class Solution:\n    def exist(self, board: List[List[str]], word: str) -> bool:\n        R = len(board)\n        C = len(board[0]) \n        # if len of word is greater than total number of character in board\n        if len(word) > R*C:\n            return False\n        # print(sum(board, []))\n        # used to concatinate the elementes of the board instead of summing it\n        count = Counter(sum(board, []))\n        # print(count)\n        # count of a LETTER in word is Greater than count of it being in board\n        for c, countWord in Counter(word).items():\n            if count[c] < countWord:\n                return False  \n        # if count of 1st letter of Word(A) is Greater than that of Last One in Board(B). \n        # Reverse Search the word then search as less case will be searched.\n        if count[word[0]] > count[word[-1]]:\n             word = word[::-1]            \n        # simple backtracking \n        seen = set()    # so we dont access the element again\n        \n        def dfs(r, c, i):\n            if i == len(word):\n                return True\n            if r < 0 or c < 0 or r >= R or c >= C or word[i] != board[r][c] or (r,c) in seen:\n                return False\n            seen.add((r,c))\n            res = (\n                dfs(r+1,c,i+1) or \n                dfs(r-1,c,i+1) or\n                dfs(r,c+1,i+1) or\n                dfs(r,c-1,i+1) \n            )\n            seen.remove((r,c))  #backtracking\n            return res\n        for i in range(R):\n            for j in range(C):\n                if dfs(i,j,0):\n                    return True\n        return False","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"word-search","has_notes":false}