{"id":954919612,"lang":"python3","lang_name":"Python3","time":"2 weeks, 3 days","timestamp":1684736451,"status":10,"status_display":"Accepted","runtime":"127 ms","url":"/submissions/detail/954919612/","is_pending":"Not Pending","title":"Max Area of Island","memory":"19 MB","code":"class Solution:\n    def maxAreaOfIsland(self, grid: List[List[int]]) -> int:\n\n        def dfs(i,j):\n            ret = 1\n            if i>0 and grid[i-1][j]==1:\n                grid[i-1][j]=0\n                ret+=dfs(i-1,j)\n            if j>0 and grid[i][j-1]==1:\n                grid[i][j-1]=0\n                ret+=dfs(i,j-1)\n            if i+1<len(grid) and grid[i+1][j]==1:\n                grid[i+1][j]=0\n                ret+=dfs(i+1,j)\n            if j+1<len(grid[0]) and grid[i][j+1]==1:\n                grid[i][j+1]=0\n                ret+=dfs(i,j+1)\n            return ret\n        \n        ans=0\n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                if grid[i][j]==1:\n                    grid[i][j]=0\n                    ans=max(ans,dfs(i,j))\n        return ans","compare_resulttitle_slug":"max-area-of-island","has_notes":false}