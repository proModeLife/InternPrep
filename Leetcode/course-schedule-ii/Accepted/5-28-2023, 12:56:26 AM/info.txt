{"id":958557765,"lang":"python3","lang_name":"Python3","time":"1 week, 4 days","timestamp":1685215586,"status":10,"status_display":"Accepted","runtime":"120 ms","url":"/submissions/detail/958557765/","is_pending":"Not Pending","title":"Course Schedule II","memory":"17.9 MB","code":"class Solution:\n    def findOrder(self, numCourses: int, prerequisites: List[List[int]]) -> List[int]:\n        indegree=[0]*numCourses\n        neighbours=defaultdict(list)\n        for crs,pre in prerequisites:\n            neighbours[pre].append(crs)\n            indegree[crs]+=1\n        queue=deque()\n        for i in range(numCourses):\n            if indegree[i]==0:\n                queue.append(i)\n        ans=[]\n        while queue:\n            node=queue.popleft()\n            ans.append(node)\n\n            for neighbour in neighbours[node]:\n                indegree[neighbour]-=1\n                if indegree[neighbour]==0:\n                    queue.append(neighbour)\n        return ans if len(ans)==numCourses else []","compare_result":"111111111111111111111111111111111111111111111","title_slug":"course-schedule-ii","has_notes":false}