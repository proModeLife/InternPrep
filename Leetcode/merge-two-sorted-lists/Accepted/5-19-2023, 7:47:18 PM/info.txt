{"id":953381616,"lang":"python3","lang_name":"Python3","time":"2 weeks, 5 days","timestamp":1684505838,"status":10,"status_display":"Accepted","runtime":"58 ms","url":"/submissions/detail/953381616/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"16.3 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:\n        head, res=None, None\n        if list1 and list2:\n            if list1.val < list2.val:\n                res=list1\n                list1=list1.next\n            else: \n                res=list2\n                list2=list2.next\n        elif list1:\n            return list1\n        elif list2:\n            return list2\n        else:\n            return None\n        head=res\n        while list1 and list2:\n            if list1.val < list2.val:\n                res.next=list1\n                res=res.next\n                list1=list1.next\n            else:\n                res.next=list2\n                res=res.next\n                list2=list2.next\n        if list1:\n            res.next=list1\n        elif list2:\n            res.next=list2\n        return head\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false}