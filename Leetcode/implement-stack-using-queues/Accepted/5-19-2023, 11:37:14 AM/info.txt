{"id":953163880,"lang":"python3","lang_name":"Python3","time":"2 weeks, 6 days","timestamp":1684476434,"status":10,"status_display":"Accepted","runtime":"43 ms","url":"/submissions/detail/953163880/","is_pending":"Not Pending","title":"Implement Stack using Queues","memory":"16.5 MB","code":"class MyStack:\n\n    def __init__(self):\n        self.curr = 0\n        self.qus = [[], []]\n\n    def push(self, x: int) -> None:\n        self.qus[self.curr].append(x)\n\n    def pop(self) -> int:\n        while len(self.qus[self.curr]) > 1:\n            self.qus[1 - self.curr].append(self.qus[self.curr].pop(0))\n        self.curr = 1 - self.curr\n        return self.qus[1 - self.curr].pop()\n\n    def top(self) -> int:\n        return self.qus[self.curr][-1]\n        \n    def empty(self) -> bool:\n        return len(self.qus[self.curr]) == 0\n        \n\n\n# Your MyStack object will be instantiated and called as such:\n# obj = MyStack()\n# obj.push(x)\n# param_2 = obj.pop()\n# param_3 = obj.top()\n# param_4 = obj.empty()","compare_result":"11111111111111111","title_slug":"implement-stack-using-queues","has_notes":false}