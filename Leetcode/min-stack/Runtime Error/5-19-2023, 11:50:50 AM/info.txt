{"id":953170766,"lang":"python3","lang_name":"Python3","time":"2 weeks, 6 days","timestamp":1684477250,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/953170766/","is_pending":"Not Pending","title":"Min Stack","memory":"N/A","code":"class MinStack:\n\n    def __init__(self):\n        self.count = {}\n        self.s1 = []\n        self.s2 = [float('inf')]\n\n    def push(self, val: int) -> None:\n        self.s1.append(val)\n        if val <= self.s2[-1]:\n            self.s2.append(val)\n            self.count[val] = 1\n        else:\n            get = self.count.get(val, 0)\n            self.count[val] = get + 1\n        \n    def pop(self) -> None:\n        val = self.s1.pop()\n        if val == self.s2[-1]:\n            self.s2.pop()\n            self.count[val] -= 1\n            if self.count[val] == 0:\n                del self.count[val]\n\n    def top(self) -> int:\n        return self.s1[-1]\n\n    def getMin(self) -> int:\n        return self.s2[-1]","compare_result":"1111100000000000000000000000000","title_slug":"min-stack","has_notes":false}