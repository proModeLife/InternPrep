{"id":856694046,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1670513784,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/856694046/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"N/A","code":"class Solution {\npublic:\n    int search(vector<int>& nums, int target) {\n        int mid;\n        int find;\n        int start = 0, end = nums.size() - 1;\n        while (start < end) {\n            int mid = (start + end) / 2;\n            if (nums[mid] < nums[mid - 1]) {\n                // Pivot index is the mid index\n                start = mid;\n                break;\n            }\n            if (nums[mid] > nums[start]) {\n                // Pivot index is to the right of mid\n                start = mid + 1;\n            } else {\n                // Pivot index is to the left of mid\n                end = mid - 1;\n            }\n        }\n        find =start;\n        int ans =(find+target-nums[find])%nums.size();\n        if(nums[ans]==target) return ans;\n        return -1;\n    }\n};","compare_result":"111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-in-rotated-sorted-array","has_notes":false}