{"id":954895354,"lang":"python3","lang_name":"Python3","time":"2 weeks, 3 days","timestamp":1684733472,"status":10,"status_display":"Accepted","runtime":"341 ms","url":"/submissions/detail/954895354/","is_pending":"Not Pending","title":"Number of Islands","memory":"24.1 MB","code":"from collections import deque\n\nclass Solution:\n    def numIslands(self, grid: List[List[str]]) -> int:\n        visited = set()\n        directions = [(1, 0), (-1, 0), (0, 1), (0, -1)]\n        m, n = len(grid), len(grid[0])\n        ans = 0\n        \n        for i in range(m):\n            for j in range(n):\n                if grid[i][j] == '1' and (i, j) not in visited:\n                    ans += 1\n                    queue = deque([(i, j)])\n                    visited.add((i, j))\n                    while queue:\n                        x, y = queue.popleft()\n                        for dx, dy in directions:\n                            nx, ny = x + dx, y + dy\n                            if 0 <= nx < m and 0 <= ny < n and grid[nx][ny] == '1' and (nx, ny) not in visited:\n                                queue.append((nx, ny))\n                                visited.add((nx, ny))\n        \n        return ans","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false}