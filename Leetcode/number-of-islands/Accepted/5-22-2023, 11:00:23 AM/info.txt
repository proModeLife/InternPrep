{"id":954894981,"lang":"python3","lang_name":"Python3","time":"2 weeks, 3 days","timestamp":1684733423,"status":10,"status_display":"Accepted","runtime":"341 ms","url":"/submissions/detail/954894981/","is_pending":"Not Pending","title":"Number of Islands","memory":"27.8 MB","code":"class Solution:\n    def numIslands(self, grid: List[List[str]]) -> int:\n        visited=set()\n        def covered(i,j):\n            nonlocal visited\n            if i>0 and grid[i-1][j]=='1' and (i-1,j) not in visited:\n                visited.add((i-1,j))\n                covered(i-1,j)\n            if j>0 and grid[i][j-1]=='1' and (i,j-1) not in visited:\n                visited.add((i,j-1))\n                covered(i,j-1)\n            if i< len(grid)-1 and grid[i+1][j]=='1' and (i+1,j) not in visited:\n                visited.add((i+1,j))\n                covered(i+1,j)\n            if j< len(grid[0])-1 and grid[i][j+1]=='1' and (i,j+1) not in visited:\n                visited.add((i,j+1))\n                covered(i,j+1)\n        ans=0\n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                if grid[i][j]=='1' and (i,j) not in visited:\n                    visited.add((i,j))\n                    covered(i,j)\n                    ans+=1\n        return ans\n\n\n","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false}