{"id":953939152,"lang":"python3","lang_name":"Python3","time":"2 weeks, 4 days","timestamp":1684592829,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/953939152/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def hasCycle(self, head: Optional[ListNode]) -> bool:\n        curr=head\n        if not curr or not curr.next:\n            return False\n        tmp=curr.next\n        curr.next=None\n        curr=tmp\n        prev=head\n        while curr :\n            if curr.next and curr.next==head:\n                return True\n            tmp=curr.next\n            curr.next=prev\n            prev=curr\n            curr=tmp\n        return False\n                ","compare_result":"11110111111111111111111","title_slug":"linked-list-cycle","has_notes":false}