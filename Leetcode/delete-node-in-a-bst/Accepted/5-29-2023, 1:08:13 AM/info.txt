{"id":959179229,"lang":"python3","lang_name":"Python3","time":"1 week, 3 days","timestamp":1685302693,"status":10,"status_display":"Accepted","runtime":"81 ms","url":"/submissions/detail/959179229/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"20.9 MB","code":"class Solution:\n    def deleteNode(self, root: Optional[TreeNode], key: int) -> Optional[TreeNode]:\n        if root is None:\n            return None\n        \n        # Case 1: Deleting the root node\n        if root.val == key:\n            if root.left is None:\n                return root.right\n            elif root.right is None:\n                return root.left\n            else:\n                # Find the successor (minimum value) in the right subtree\n                successor = self.findMin(root.right)\n                root.val = successor.val\n                root.right = self.deleteNode(root.right, successor.val)\n        \n        # Case 2: Deleting a non-root node\n        parent = None\n        cur = root\n        while cur:\n            if key < cur.val:\n                parent = cur\n                cur = cur.left\n            elif key > cur.val:\n                parent = cur\n                cur = cur.right\n            else:\n                if cur.left is None:\n                    if cur == parent.left:\n                        parent.left = cur.right\n                    else:\n                        parent.right = cur.right\n                elif cur.right is None:\n                    if cur == parent.left:\n                        parent.left = cur.left\n                    else:\n                        parent.right = cur.left\n                else:\n                    successor = self.findMin(cur.right)\n                    cur.val = successor.val\n                    cur.right = self.deleteNode(cur.right, successor.val)\n                break\n        \n        return root\n    \n    def findMin(self, node: TreeNode) -> TreeNode:\n        while node.left:\n            node = node.left\n        return node\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-node-in-a-bst","has_notes":false}