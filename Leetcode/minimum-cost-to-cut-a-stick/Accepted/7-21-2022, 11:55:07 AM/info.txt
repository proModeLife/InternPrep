{"id":752660763,"lang":"cpp","lang_name":"C++","time":"10 months, 3 weeks","timestamp":1658384707,"status":10,"status_display":"Accepted","runtime":"62 ms","url":"/submissions/detail/752660763/","is_pending":"Not Pending","title":"Minimum Cost to Cut a Stick","memory":"10.5 MB","code":"class Solution {\npublic:\n    int f(int i, int j, vector<int>& cuts,vector<vector<int>> &dp){\n        if(i>j) return 0;\n        if(dp[i][j]!=-1)return dp[i][j];\n        else{\n        int mini = 1e9;\n        for(int k=i;k<=j;k++){\n            mini= min(mini, cuts[j+1]-cuts[i-1]+f(i,k-1,cuts,dp)+f(k+1,j,cuts,dp));\n        }\n        \n        return dp[i][j]=mini;\n        }\n    }\n    int minCost(int n, vector<int>& cuts) {\n        cuts.push_back(n);\n        cuts.insert(cuts.begin(),0);\n        sort(cuts.begin(),cuts.end());\n        vector<vector<int>> dp(cuts.size()+1,vector<int>(cuts.size()+1,0));\n        for(int i=cuts.size()-2;i>=1;i--){\n            for(int j=1;j<=cuts.size()-2;j++){\n                if(i>j)continue;\n                int mini=1e9;\n                for(int k=i;k<=j;k++){\n                mini= min(mini, cuts[j+1]-cuts[i-1]+dp[i][k-1]+dp[k+1][j]);\n                             }\n                dp[i][j]=mini;\n            }\n        }\n        return dp[1][cuts.size()-2];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-to-cut-a-stick","has_notes":false}