{"id":752093395,"lang":"cpp","lang_name":"C++","time":"10 months, 3 weeks","timestamp":1658329246,"status":10,"status_display":"Accepted","runtime":"748 ms","url":"/submissions/detail/752093395/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"9.3 MB","code":"class Solution {\npublic:\n    // Time Complexity:- O(n*sum)\n    // Space Complexity:- O(sum);\n    bool canPartition(vector<int>& nums) {\n        int n = nums.size();\n        int sum = accumulate(nums.begin(),nums.end(),0);\n        if(sum%2)\n            return false;\n        sum /= 2;\n        vector<vector<bool>> dp(2,vector<bool>(sum+1));\n        dp[0][0] = true;\n        for(int i=1;i<=n;i++){\n            for(int j=1;j<=sum;j++){\n                dp[i%2][j] = dp[(i-1)%2][j];\n                if(j>=nums[i-1])\n                    dp[i%2][j] = dp[i%2][j] or dp[(i-1)%2][j-nums[i-1]];\n            }\n        }\n        return dp[n%2][sum];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum","has_notes":false}