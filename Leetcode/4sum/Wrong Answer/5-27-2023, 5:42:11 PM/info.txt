{"id":958232631,"lang":"python3","lang_name":"Python3","time":"1 week, 4 days","timestamp":1685189531,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/958232631/","is_pending":"Not Pending","title":"4Sum","memory":"N/A","code":"from typing import List\n\nclass Solution:\n    def fourSum(self, nums: List[int], target: int) -> List[List[int]]:\n        nums.sort()\n        result = []\n        \n\n        def threeSum(start, target, nums, result):\n            for index in range(start + 1, len(nums)):\n                if nums[index] > target:\n                    break\n                if index > start + 1 and nums[index] == nums[index - 1]:\n                    continue\n                left, right = index + 1, len(nums) - 1\n                while left < right:\n                    if nums[left] + nums[right] + nums[index] < target:\n                        left += 1\n                    elif nums[left] + nums[right] + nums[index] > target:\n                        right -= 1\n                    else:\n                        result.append([nums[start], nums[index], nums[left], nums[right]])\n                        left += 1\n                        right -= 1\n                        while left < right and nums[left] == nums[left - 1]:\n                            left += 1\n        threeSum(0, target - nums[0], nums, result)\n        count=0\n        for i in range(1,len(nums)):\n            if nums[i]==nums[i-1]:\n                continue\n            threeSum(i,target-nums[i],nums,result)   \n        return result\n","compare_result":"1111111111111111111111111111011111111011111111111111110111111111001111111111111111110111011111111101111111111111111110011101110111100011110111000111110111101011110111111001011010101111000111111111001001011011111001011111111111001111111111011111111111111111111110111011111111111111110111111111","title_slug":"4sum","has_notes":false}