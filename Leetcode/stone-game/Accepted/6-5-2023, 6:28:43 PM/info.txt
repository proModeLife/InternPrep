{"id":964382028,"lang":"python3","lang_name":"Python3","time":"2 days, 18 hours","timestamp":1685969923,"status":10,"status_display":"Accepted","runtime":"457 ms","url":"/submissions/detail/964382028/","is_pending":"Not Pending","title":"Stone Game","memory":"16.4 MB","code":"class Solution:\n    def stoneGame(self, piles: List[int]) -> bool:\n        n = len(piles)\n        dp = [0] * n\n        for i in range(n-1, -1, -1):\n            for j in range(i, n):\n                if i == j:\n                    dp[j] = piles[i]\n                else:\n                    take_left = piles[i] + min(dp[j], dp[j-1])\n                    take_right = piles[j] + min(dp[j-1], dp[j-2] if j > 1 else 0)\n                    dp[j] = max(take_left, take_right)\n        return dp[n-1] > sum(piles) / 2","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"stone-game","has_notes":false}