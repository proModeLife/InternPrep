{"id":960752756,"lang":"python3","lang_name":"Python3","time":"1 week, 1 day","timestamp":1685515099,"status":10,"status_display":"Accepted","runtime":"1641 ms","url":"/submissions/detail/960752756/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"32.6 MB","code":"class Solution:\n    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:\n        if not nums:\n            return []\n        \n        n = len(nums)\n        if k == 1:\n            return nums\n        \n        # Initialize deque and result list\n        dq = deque()\n        result = []\n        \n        for i in range(n):\n            # Remove index of element outside the current sliding window\n            if dq and dq[0] <= i - k:\n                dq.popleft()\n            \n            # Remove indices of elements smaller than the current element\n            while dq and nums[dq[-1]] <= nums[i]:\n                dq.pop()\n            \n            # Add current index to the deque\n            dq.append(i)\n            \n            # Add maximum element for the current sliding window to the result list\n            if i >= k - 1:\n                result.append(nums[dq[0]])\n        \n        return result","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"sliding-window-maximum","has_notes":false}