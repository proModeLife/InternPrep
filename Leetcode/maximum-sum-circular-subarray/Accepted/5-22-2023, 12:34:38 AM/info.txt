{"id":954678811,"lang":"python3","lang_name":"Python3","time":"2 weeks, 3 days","timestamp":1684695878,"status":10,"status_display":"Accepted","runtime":"506 ms","url":"/submissions/detail/954678811/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"21 MB","code":"class Solution:\n    def maxSubarraySumCircular(self, nums: List[int]) -> int:\n        globMax, globMin = nums[0], nums[0]\n        curMax, curMin = 0, 0\n        total = 0\n        \n        for i, n in enumerate(nums):\n            curMax = max(curMax + n, n)\n            curMin = min(curMin + n, n)\n            total += n\n            globMax = max(curMax, globMax)\n            globMin = min(curMin, globMin)\n\n        return max(globMax, total - globMin) if globMax > 0 else globMax\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-circular-subarray","has_notes":false}