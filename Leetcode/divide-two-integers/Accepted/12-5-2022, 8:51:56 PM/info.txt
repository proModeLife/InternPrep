{"id":855078472,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1670253716,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/855078472/","is_pending":"Not Pending","title":"Divide Two Integers","memory":"6 MB","code":"class Solution {\npublic:\n//     long long multiply(long long a,long long b){\n//         long long ans = 0;\n//         for(;b>0;b>>=1,a+=a) if(b&1)ans+=a;\n//         return ans;\n//     }\n    int divide(int dividend, int divisor) {\n//     // initialize the quotient and remainder\n//     long long divd= dividend;\n//     long long divs= divisor;\n//     bool flag= ((long long)dividend*divisor>0);\n//     if(divd<0)divd= -divd;\n//     if(divs<0)divs= -divs;\n//     long long left= 0,mid=0;\n//     long long right = 1<<31;\n//     right+=10;\n//     while(left<right){\n//         mid=(left+right)>>1;\n//         long long guess = multiply(mid,divs);\n//         if(guess==divd){\n//             if(guess>= 1<<31){\n//                 if(flag) return 1<<31 - 1;\n//                 else{\n//                     return INT_MIN;\n//                 }\n//             }\n//             else{\n//                 if(flag)return guess;\n//                 else{\n//                     return -guess;\n//                 }\n//             }\n//         }\n//         if(guess<divd){\n//             left=mid;\n//         }\n//         else{\n//             right=mid;\n//         }\n//     }\n//     long long ans= left;\n//     if(ans>= 1<<31){\n//                 if(flag) return 1<<31 - 1;\n//                 else{\n//                     return INT_MIN;\n//                 }\n//             }\n//             else{\n//                 if(flag)return ans;\n//                 else{\n//                     return -ans;\n//                 }\n//             }\n// }\nif(dividend==0 || divisor==0) return 0;\n        int sign = (dividend<0 ^ divisor<0)? -1 : 1;\n        long dvd = abs((long)dividend), dvr = abs((long)divisor);\n        cout<<dvd<<dvr<<endl;\n        long ret = 0, d = 0, t = 0;\n        while(dvd > 0)\n        {\n            if(dvr > dvd) break;\n            t = dvr, d = 0;\n            while(t <= dvd) t <<= 1, d++;\n            t>>=1, d--;\n            ret |= (long)1<<d;\n            dvd -= t;\n        }\n        ret *= sign;\n        return ret>INT_MAX? INT_MAX : ret;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"divide-two-integers","has_notes":false}