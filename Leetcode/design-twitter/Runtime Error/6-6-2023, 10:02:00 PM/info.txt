{"id":965288572,"lang":"python3","lang_name":"Python3","time":"1 day, 15 hours","timestamp":1686069120,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/965288572/","is_pending":"Not Pending","title":"Design Twitter","memory":"N/A","code":"from typing import List\nfrom collections import defaultdict\nfrom heapq import heappush, heappop\n\n\nclass Twitter:\n    def __init__(self):\n        self.infoMap = defaultdict(list)\n        self.count = 1\n\n    def postTweet(self, userId: int, tweetId: int) -> None:\n        if userId not in self.infoMap:\n            self.infoMap[userId] = [[], set()]\n        self.infoMap[userId][0].append((-self.count, tweetId))\n        if len(self.infoMap[userId][0]) > 10:\n            self.infoMap[userId][0].pop(0)\n        self.count += 1\n\n    def getNewsFeed(self, userId: int) -> List[int]:\n        heap = []\n\n        for tweet in self.infoMap[userId][0]:\n            heappush(heap, tweet)\n            if len(heap) > 10:\n                heappop(heap)\n        # Add the tweets from the user's followees to the heap\n        for followee in self.infoMap[userId][1]:\n            for tweet in self.infoMap[followee][0]:\n                heappush(heap, tweet)\n                if len(heap) > 10:\n                    heappop(heap)\n\n        return [tweet for _, tweet in sorted(heap)]\n\n    def follow(self, followerId: int, followeeId: int) -> None:\n\n        if followerId != followeeId and followeeId not in self.infoMap[followerId][1]:\n            self.infoMap[followerId][1].add(followeeId)\n\n    def unfollow(self, followerId: int, followeeId: int) -> None:\n\n        if followeeId in self.infoMap[followerId][1]:\n            self.infoMap[followerId][1].remove(followeeId)","compare_result":"1000000000000000","title_slug":"design-twitter","has_notes":false}