{"id":959163149,"lang":"python3","lang_name":"Python3","time":"1 week, 3 days","timestamp":1685300518,"status":10,"status_display":"Accepted","runtime":"57 ms","url":"/submissions/detail/959163149/","is_pending":"Not Pending","title":"Partition List","memory":"16.2 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n\nclass Solution:\n    def partition(self, head: Optional[ListNode], x: int) -> Optional[ListNode]:\n        dl1, dl2 = ListNode(), ListNode()  # dummy lists for smaller and greater than or equal values\n        cur1, cur2 = dl1, dl2\n        curr = head\n        while curr:\n            if curr.val < x:\n                cur1.next = curr\n                cur1 = cur1.next\n            else:\n                cur2.next = curr\n                cur2 = cur2.next\n            curr = curr.next\n        \n        cur2.next = None  # Set the next of the last node in cur2 to None\n        cur1.next = dl2.next  # Append the list of greater than or equal values to the end of cur1\n        \n        return dl1.next\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-list","has_notes":false}