{"id":953459359,"lang":"python3","lang_name":"Python3","time":"2 weeks, 5 days","timestamp":1684515236,"status":10,"status_display":"Accepted","runtime":"47 ms","url":"/submissions/detail/953459359/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"16.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def postorderTraversal(self, root: Optional[TreeNode]) -> List[int]:\n        if not root:\n            return None\n        res, stack = [], []\n        cur = root\n        \n        while cur or stack:\n            if cur:\n                stack.append(cur)\n                res.insert(0, cur.val)\n                cur = cur.right\n            else:\n                node = stack.pop()\n                cur = node.left\n        \n        return res","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal","has_notes":false}