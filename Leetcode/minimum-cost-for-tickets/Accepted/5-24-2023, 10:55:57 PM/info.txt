{"id":956588176,"lang":"python3","lang_name":"Python3","time":"2Â weeks","timestamp":1684949157,"status":10,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/956588176/","is_pending":"Not Pending","title":"Minimum Cost For Tickets","memory":"16.4 MB","code":"class Solution:\n    def mincostTickets(self, days: List[int], costs: List[int]) -> int:\n        \n        # index of ticket\n        _1day_pass, _7day_pass, _30day_pass = 0, 1, 2\n        \n        # set of travel days\n        travel_days = set(days)\n        \n        # last travel day\n        last_traverl_day = days[-1]\n        \n        # DP Table, record for minimum cost of ticket to travel\n        dp_cost = [  0 for _ in range(last_traverl_day+1)]\n    \n        \n        # Solve min cost by Dynamic Programming\n        for day_i in range(1, last_traverl_day+1):\n            \n            \n            if day_i not in travel_days:\n                \n                # today is not traveling day\n                # no extra cost\n                dp_cost[day_i] = dp_cost[day_i - 1]\n            \n            \n            else:\n                \n                # today is traveling day\n                # compute optimal cost by DP\n                \n                dp_cost[day_i] = min(   dp_cost[ day_i - 1 ]  + costs[ _1day_pass ],\n                                        dp_cost[ max(day_i - 7, 0) ]  + costs[ _7day_pass ],\n                                        dp_cost[ max(day_i - 30, 0) ] + costs[ _30day_pass ]     )\n        \n        \n        # Cost on last travel day of this year is the answer\n        return dp_cost[last_traverl_day]\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-for-tickets","has_notes":false}