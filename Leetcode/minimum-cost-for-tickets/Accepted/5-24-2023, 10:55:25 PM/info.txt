{"id":956587857,"lang":"python3","lang_name":"Python3","time":"2Â weeks","timestamp":1684949125,"status":10,"status_display":"Accepted","runtime":"66 ms","url":"/submissions/detail/956587857/","is_pending":"Not Pending","title":"Minimum Cost For Tickets","memory":"16.2 MB","code":"class Solution:\n    def mincostTickets(self, days: List[int], costs: List[int]) -> int:\n        n = len(days)\n        durations = [1, 7, 30]\n        dp = [float('inf')] * (n + 1)\n        dp[0] = 0\n        for i in range(1, n + 1):\n            for j in range(3):\n                k = i - 1\n                while k >= 0 and days[k] > days[i-1] - durations[j]:\n                    k -= 1\n                dp[i] = min(dp[i], dp[k+1] + costs[j])\n        return dp[n]","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-for-tickets","has_notes":false}