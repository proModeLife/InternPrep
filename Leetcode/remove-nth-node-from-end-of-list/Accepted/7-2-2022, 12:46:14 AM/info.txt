{"id":736085458,"lang":"cpp","lang_name":"C++","time":"11 months, 1 week","timestamp":1656702974,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/736085458/","is_pending":"Not Pending","title":"Remove Nth Node From End of List","memory":"10.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* removeNthFromEnd(ListNode* head, int n) {\n        vector<ListNode*> vec;\n        ListNode* curr=head;\n        while(curr->next){\n            vec.push_back(curr);\n            curr= curr->next;\n        }\n        if(curr){\n        vec.push_back(curr);}\n        int N= vec.size();\n        if(n==N){\n            if(N==1){\n                return nullptr;\n            }\n            vec[0]= nullptr;\n            \n            return vec[1];}\n        if(n==1){\n            vec[N-2]->next=nullptr;\n            return vec[0];\n        }\n        vec[N-n]= nullptr;\n        vec[N-n-1]->next=vec[N-n+1];\n        return vec[0];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-nth-node-from-end-of-list","has_notes":false}