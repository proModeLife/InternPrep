{"id":953358822,"lang":"python3","lang_name":"Python3","time":"2Â weeks, 5Â days","timestamp":1684502904,"status":10,"status_display":"Accepted","runtime":"65 ms","url":"/submissions/detail/953358822/","is_pending":"Not Pending","title":"Search Insert Position","memory":"17.1 MB","code":"class Solution:\n    def searchInsert(self, nums: List[int], target: int) -> int:\n        l, r = 0, len(nums) - 1\n        m=0\n        while l <= r:\n            m = l + ((r - l) // 2)  # (l + r) // 2 can lead to overflow\n            if nums[m] > target:\n                if m==0 or nums[m-1]<target:\n                    return m\n                r = m - 1\n            elif nums[m] < target:\n                if m==len(nums)-1 or nums[m+1]>target:\n                    return m+1\n                l = m + 1\n            else:\n                return m\n        return m","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-insert-position","has_notes":false}