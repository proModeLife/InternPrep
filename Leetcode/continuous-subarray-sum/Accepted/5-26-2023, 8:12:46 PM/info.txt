{"id":957739093,"lang":"python3","lang_name":"Python3","time":"1Â week, 5Â days","timestamp":1685112166,"status":10,"status_display":"Accepted","runtime":"972 ms","url":"/submissions/detail/957739093/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"36.1 MB","code":"#We are basically storing sum%k and storing it in the hashmap and checking it.\n#Math logic is that the overall sum will get cancelled out because of modulo\n\nclass Solution:\n    def checkSubarraySum(self, nums: List[int], k: int) -> bool:\n        hashmap = {}\n        hashmap[0]=-1\n        summ=0\n        for i,j in enumerate(nums):\n            summ+=j\n            if summ%k in hashmap.keys():\n                if i-hashmap[summ%k]>=2:\n                    return True\n                else:\n                    continue\n            hashmap[summ%k]=i\n        return False\n            \n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"continuous-subarray-sum","has_notes":false}