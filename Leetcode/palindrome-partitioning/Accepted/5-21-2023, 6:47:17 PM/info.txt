{"id":954516238,"lang":"python3","lang_name":"Python3","time":"2 weeks, 3 days","timestamp":1684675037,"status":10,"status_display":"Accepted","runtime":"666 ms","url":"/submissions/detail/954516238/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"33.9 MB","code":"class Solution:\n    def partition(self, s: str) -> List[List[str]]:\n        if len(s) <= 1:\n            return [[s]]\n        ans = []\n        \n        def dfs(ind, partition):\n            if ind == len(s):\n                ans.append(partition.copy())\n                return\n            for j in range(ind, len(s)):\n                if s[ind:j+1] == s[ind:j+1][::-1]:\n                    partition.append(s[ind:j+1])\n                    dfs(j+1, partition)\n                    partition.pop()\n        \n        partition = []\n        dfs(0, partition)\n        return ans","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false}