{"id":959171456,"lang":"python3","lang_name":"Python3","time":"1 week, 3 days","timestamp":1685301628,"status":10,"status_display":"Accepted","runtime":"97 ms","url":"/submissions/detail/959171456/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"20.9 MB","code":"class Solution:\n    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':\n        if p.val > root.val and q.val > root.val:\n            return self.lowestCommonAncestor(root.right, p, q)\n        elif p.val < root.val and q.val < root.val:\n            return self.lowestCommonAncestor(root.left, p, q)\n        else:\n            return root\n","compare_result":"111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false}