{"id":953454720,"lang":"python3","lang_name":"Python3","time":"2 weeks, 5 days","timestamp":1684514707,"status":10,"status_display":"Accepted","runtime":"57 ms","url":"/submissions/detail/953454720/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"16.4 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def preorderTraversal(self, root: Optional[TreeNode]) -> List[int]:\n        if not root:\n            return None\n        res, stack = [], [root]\n        while stack!=[]:\n            cur=stack.pop()\n            res.append(cur.val)\n            if cur.right:\n                stack.append(cur.right)\n            if cur.left:\n                stack.append(cur.left)\n                \n        return res","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false}