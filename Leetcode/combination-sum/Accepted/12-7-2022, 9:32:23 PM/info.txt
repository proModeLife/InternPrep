{"id":856180155,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1670428943,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/856180155/","is_pending":"Not Pending","title":"Combination Sum","memory":"10.6 MB","code":"class Solution {\npublic:\n    void backtrack(vector<int>& nums, vector<vector<int>>& res, vector<int>& curr, int start, int target) {\n    if(target ==0){res.push_back(curr); return;}\n    if (start == nums.size() || target <0) {\n        return;\n    }\n    curr.push_back(nums[start]);\n    backtrack(nums, res, curr, start,target-nums[start]);\n    curr.pop_back();\n    backtrack(nums, res, curr, start + 1,target);\n}\n    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {\n        vector<vector<int>> result;\n        vector<int> curr;\n        sort(candidates.begin(),candidates.end());\n        backtrack(candidates,result,curr,0,target);\n        return result;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false}