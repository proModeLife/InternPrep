{"id":953852858,"lang":"python3","lang_name":"Python3","time":"2 weeks, 4 days","timestamp":1684579973,"status":10,"status_display":"Accepted","runtime":"50 ms","url":"/submissions/detail/953852858/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"16.5 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def middleNode(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        if not head: \n            return None\n        slow=head\n        fast=head\n        while fast and fast.next:\n            slow=slow.next\n            fast=fast.next.next\n        return slow","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false}