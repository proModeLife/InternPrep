{"id":954393932,"lang":"python3","lang_name":"Python3","time":"2Â weeks, 3Â days","timestamp":1684657519,"status":10,"status_display":"Accepted","runtime":"54 ms","url":"/submissions/detail/954393932/","is_pending":"Not Pending","title":"Permutations","memory":"16.5 MB","code":"class Solution:\n    def permute(self, nums: List[int]) -> List[List[int]]:\n        ans = []\n        visited = set()\n\n        def backtrack(perm):\n            if len(perm) == len(nums):\n                ans.append(perm[:])\n                return\n\n            for i in range(len(nums)):\n                if i not in visited:\n                    visited.add(i)\n                    perm.append(nums[i])\n                    backtrack(perm)\n                    perm.pop()\n                    visited.remove(i)\n\n        backtrack([])\n        return ans","compare_result":"11111111111111111111111111","title_slug":"permutations","has_notes":false}