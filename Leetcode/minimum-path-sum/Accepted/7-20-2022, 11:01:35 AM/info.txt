{"id":751740282,"lang":"cpp","lang_name":"C++","time":"10 months, 3 weeks","timestamp":1658295095,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/751740282/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"10.1 MB","code":"class Solution {\npublic:\n    int f(int i,int j,int n,int m,vector<vector<int>>& grid, vector<vector<int>> &dp){\n        if(i==n &&j==m){\n            return grid[i][j];\n        }\n        if(i>n || j>m){\n            return 101*101;\n        }\n        if(dp[i][j]!=-1) return dp[i][j];   \n        else{\n         \n        return dp[i][j]=grid[i][j] + std::min(f(i+1,j,n,m,grid,dp),f(i,j+1,n,m,grid,dp));}\n    }\n    int minPathSum(vector<vector<int>>& grid) {\n        int n=grid.size(),m=grid[0].size();\n        // for(auto it: grid){\n        //     n++;\n        // }\n        // for(auto it: grid[0]){\n        //     m++;\n        // }\n        vector<vector<int>> dp(n,vector<int>(m,-1));\n        return f(0,0,n-1,m-1,grid,dp);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false}