{"id":953829146,"lang":"python3","lang_name":"Python3","time":"2 weeks, 4 days","timestamp":1684576705,"status":10,"status_display":"Accepted","runtime":"253 ms","url":"/submissions/detail/953829146/","is_pending":"Not Pending","title":"Squares of a Sorted Array","memory":"18.6 MB","code":"class Solution:\n    def sortedSquares(self, nums: List[int]) -> List[int]:\n        if not nums:\n            return None\n        i = 0\n        while i < len(nums) and nums[i] < 0:\n            i += 1\n        nums1 = []\n        for j in range(i-1,-1,-1):\n            nums1.append(nums[j] * nums[j])\n        nums2 = []\n        for j in range(i, len(nums)):\n            nums2.append(nums[j] * nums[j])\n        i, j = 0, 0\n        ans = []\n        while i < len(nums1) and j < len(nums2):\n            if nums1[i] < nums2[j]:\n                ans.append(nums1[i])\n                i += 1\n            else:\n                ans.append(nums2[j])\n                j += 1\n        while i < len(nums1):\n            ans.append(nums1[i])\n            i += 1\n        while j < len(nums2):\n            ans.append(nums2[j])\n            j += 1\n        return ans","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"squares-of-a-sorted-array","has_notes":false}