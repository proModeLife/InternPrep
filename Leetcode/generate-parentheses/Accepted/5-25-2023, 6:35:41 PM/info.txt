{"id":957081982,"lang":"python3","lang_name":"Python3","time":"1 week, 6 days","timestamp":1685019941,"status":10,"status_display":"Accepted","runtime":"50 ms","url":"/submissions/detail/957081982/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"16.6 MB","code":"class Solution:\n    def generateParenthesis(self, n: int) -> List[str]:\n        stack = []\n        res = []\n\n        def backtrack(openN, closedN):\n            if openN == closedN == n:\n                res.append(\"\".join(stack))\n                return\n\n            if openN < n:\n                stack.append(\"(\")\n                backtrack(openN + 1, closedN)\n                stack.pop()\n            if closedN < openN:\n                stack.append(\")\")\n                backtrack(openN, closedN + 1)\n                stack.pop()\n\n        backtrack(0, 0)\n        return res\n","compare_result":"11111111","title_slug":"generate-parentheses","has_notes":false}