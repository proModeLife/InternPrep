{"id":957006523,"lang":"python3","lang_name":"Python3","time":"1 week, 6 days","timestamp":1685009712,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/957006523/","is_pending":"Not Pending","title":"Unique Length-3 Palindromic Subsequences","memory":"N/A","code":"class Solution:\n    def countPalindromicSubsequence(self, s: str) -> int:\n        map1={}\n        ans=set()\n        for i in range(len(s)):\n            if map1.get(s[i],-1)==-1:\n                map1[s[i]]=i\n            elif map1[s[i]]<i-1:\n                j=map1[s[i]] \n                for k in range(j+1,i):\n                    ans.add(s[j]+s[k]+s[i])\n                map1[s[i]]=i\n            \n        return len(ans)","compare_result":"1111111111111100100000000000000000000000000011111011111011101111111011","title_slug":"unique-length-3-palindromic-subsequences","has_notes":false}