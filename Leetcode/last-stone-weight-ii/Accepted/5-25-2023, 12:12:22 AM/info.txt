{"id":956635140,"lang":"python3","lang_name":"Python3","time":"2Â weeks","timestamp":1684953742,"status":10,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/956635140/","is_pending":"Not Pending","title":"Last Stone Weight II","memory":"22.2 MB","code":"class Solution:\n    def lastStoneWeightII(self, stones: List[int]) -> int:\n        stoneSum = sum(stones)\n        target = ceil(stoneSum / 2)\n\n        def dfs(i, total):\n            if total >= target or i == len(stones):\n                return abs(total - (stoneSum - total))\n            if (i, total) in dp:\n                return dp[(i, total)]\n\n            dp[(i, total)] = min(dfs(i + 1, total),\n                                 dfs(i + 1, total + stones[i]))\n            return dp[(i, total)]\n\n        dp = {}\n        return dfs(0, 0)","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"last-stone-weight-ii","has_notes":false}