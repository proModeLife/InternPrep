{"id":954411641,"lang":"python3","lang_name":"Python3","time":"2Â weeks, 3Â days","timestamp":1684660074,"status":10,"status_display":"Accepted","runtime":"123 ms","url":"/submissions/detail/954411641/","is_pending":"Not Pending","title":"Combination Sum II","memory":"16.4 MB","code":"class Solution:\n    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:\n        res = []\n        candidates.sort()\n\n        def backtrack(i, subset,target):\n            if target==0:\n                res.append(subset[::])\n                return\n            if target<0 or i==len(candidates):\n                return\n            # All subsets that include nums[i]\n            subset.append(candidates[i])\n            backtrack(i + 1, subset,target-candidates[i])\n            subset.pop()\n\n            # All subsets that don't include nums[i]\n            while i + 1 < len(candidates) and candidates[i] == candidates[i + 1]:\n                i += 1\n            backtrack(i + 1, subset,target)\n\n        backtrack(0, [],target)\n        return res","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum-ii","has_notes":false}