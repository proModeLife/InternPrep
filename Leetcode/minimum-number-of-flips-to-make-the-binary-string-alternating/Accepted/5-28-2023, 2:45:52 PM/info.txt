{"id":958889438,"lang":"python3","lang_name":"Python3","time":"1 week, 3 days","timestamp":1685265352,"status":10,"status_display":"Accepted","runtime":"1145 ms","url":"/submissions/detail/958889438/","is_pending":"Not Pending","title":"Minimum Number of Flips to Make the Binary String Alternating","memory":"18.3 MB","code":"class Solution:\n    def minFlips(self, s: str) -> int:\n        alt1, alt2 = \"\", \"\"\n        diff1, diff2 = 0, 0\n        n = len(s) \n        s = s + s\n        ans = len(s)\n\n        for i in range(len(s)):\n            alt1 += '0' if i % 2 else '1'\n            alt2 += '1' if i % 2 else '0'\n            if i<n:\n                diff1 += (s[i] != alt1[i])\n                diff2 += (s[i] != alt2[i])\n\n        l, r = 0, n-1\n        ans = min(ans, diff1, diff2)\n\n        while r + 1 < len(s):\n            r += 1\n            diff1 += (s[r] != alt1[r])\n            diff2 += (s[r] != alt2[r])\n            diff1 -= (s[l] != alt1[l])\n            diff2 -= (s[l] != alt2[l])\n            l += 1\n            ans = min(ans, diff1, diff2)\n\n        return ans\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-flips-to-make-the-binary-string-alternating","has_notes":false}