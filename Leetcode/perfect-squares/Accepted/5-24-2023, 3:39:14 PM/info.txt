{"id":956366998,"lang":"python3","lang_name":"Python3","time":"2Â weeks","timestamp":1684922954,"status":10,"status_display":"Accepted","runtime":"118 ms","url":"/submissions/detail/956366998/","is_pending":"Not Pending","title":"Perfect Squares","memory":"16.5 MB","code":"class Solution:\n    def numSquares(self, n: int) -> int:\n        # dp = [float(\"inf\") for _ in range(n)]\n        # for i in range(n):\n        #     maxInt = int(math.sqrt(i + 1))\n        #     if (i + 1) == maxInt ** 2:\n        #         dp[i] = 1\n        #         continue\n        #     for j in range(maxInt, 0, -1):\n        #         dp[i] = min(dp[i], dp[i - j ** 2] + 1)\n        # return dp[n - 1]\n\n        def is_divided_by(x: int, count: int):\n            if count == 1:\n                return x == int(x**0.5) ** 2\n            for i in squares:\n                if i > x:\n                    break\n                if is_divided_by(x-i, count-1):\n                    return True\n            return False\n\n        squares = [i * i for i in range(1, int(n**0.5)+1)]\n\n        k = 1\n        while not is_divided_by(n, k):\n            k += 1\n        assert k<5\n        return k","compare_resulttitle_slug":"perfect-squares","has_notes":false}