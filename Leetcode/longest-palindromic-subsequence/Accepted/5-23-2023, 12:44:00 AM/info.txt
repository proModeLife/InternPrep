{"id":955333856,"lang":"python3","lang_name":"Python3","time":"2 weeks, 2 days","timestamp":1684782840,"status":10,"status_display":"Accepted","runtime":"2783 ms","url":"/submissions/detail/955333856/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"42.4 MB","code":"class Solution:\n    def longestPalindromeSubseq(self, s: str) -> int:\n        def longestCommonSubsequence(text1: str, text2: str) -> int:\n            dp = [[0 for j in range(len(text2) + 1)] for i in range(len(text1) + 1)]\n\n            for i in range(len(text1) - 1, -1, -1):\n                for j in range(len(text2) - 1, -1, -1):\n                    if text1[i] == text2[j]:\n                        dp[i][j] = 1 + dp[i + 1][j + 1]\n                    else:\n                        dp[i][j] = max(dp[i][j + 1], dp[i + 1][j])\n\n            return dp[0][0]\n        return longestCommonSubsequence(s,s[::-1])\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence","has_notes":false}