{"id":957237199,"lang":"python3","lang_name":"Python3","time":"1 week, 6 days","timestamp":1685037030,"status":10,"status_display":"Accepted","runtime":"83 ms","url":"/submissions/detail/957237199/","is_pending":"Not Pending","title":"Design Linked List","memory":"17 MB","code":"class MyLinkedList:\n\n    def __init__(self):\n        self.list=[]\n        \n\n    def get(self, index: int) -> int:\n        if index<0 or index>=len(self.list):\n            return -1\n        return self.list[index]\n        \n    def addAtHead(self, val: int) -> None:\n        self.list.insert(0,val)\n\n    def addAtTail(self, val: int) -> None:\n        self.list.append(val)\n\n    def addAtIndex(self, index: int, val: int) -> None:\n        if index<0 or index>len(self.list):\n            return\n        self.list.insert(index,val)\n\n    def deleteAtIndex(self, index: int) -> None:\n        if index<0 or index>=len(self.list):\n            return\n        del self.list[index]\n\n\n# Your MyLinkedList object will be instantiated and called as such:\n# obj = MyLinkedList()\n# param_1 = obj.get(index)\n# obj.addAtHead(val)\n# obj.addAtTail(val)\n# obj.addAtIndex(index,val)\n# obj.deleteAtIndex(index)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-linked-list","has_notes":false}