{"id":957209797,"lang":"python3","lang_name":"Python3","time":"1 week, 6 days","timestamp":1685034321,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/957209797/","is_pending":"Not Pending","title":"Frequency of the Most Frequent Element","memory":"N/A","code":"class Solution:\n    def maxFrequency(self, nums: List[int], k: int) -> int:\n        nums.sort()\n        ans = 1\n        i = 0\n        j = 1\n        while j < len(nums):\n            # Calculate the difference between the current and previous number\n            diff = nums[j] - nums[j - 1]\n            # Calculate the amount of k needed to make the previous number equal to the current number\n            need = diff * (j - i)\n            # If k is enough, move the left pointer to the right and update k\n            if k >= need:\n                k -= need\n                ans = max(ans, j - i + 1)\n                j += 1\n            # If k is not enough, move the left pointer to the right and add back the value to nums\n            else:\n                k += nums[i] - nums[i - 1]\n                i += 1\n        return ans","compare_result":"11110001100000000000000000000100000000000000000000000000000001010010111","title_slug":"frequency-of-the-most-frequent-element","has_notes":false}