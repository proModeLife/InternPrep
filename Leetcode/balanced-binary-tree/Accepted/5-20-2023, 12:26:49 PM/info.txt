{"id":953753683,"lang":"python3","lang_name":"Python3","time":"2 weeks, 5 days","timestamp":1684565809,"status":10,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/953753683/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"21.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isBalanced(self, root: Optional[TreeNode]) -> bool:\n        def helper(root):\n            if not root:\n                return [True,0]\n            left=helper(root.left)\n            right=helper(root.right)\n            balanced= left[0] and right[0] and abs(left[1]-right[1])<=1\n            return[balanced,1+max(left[1],right[1])]\n        return helper(root)[0]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false}