{"id":696925806,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1652204971,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/696925806/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"#include<bits/stdc++.h>\nusing namespace std;\nclass Solution {\npublic:\n    string helper(string s, int i){\n        int l=i-1, r=i+1;\n        string ans1= \"\",ans2=\"\";\n        ans1+= s[i];\n        ans2+=s[i];\n        while(l>0 && r<s.size()&& s[l]==s[r]){\n            ans1 = s[l]+ans1+s[r];\n            //cout<<\"s[l]: \"<<s[l]<<\" s[r]: \"<<s[r]<<endl;\n            l--;\n            r++;\n        }\n        r=i+1;\n        while(i>0 && r<s.size()&& s[i]==s[r]){\n            ans2 = s[i]+ans2+s[r];\n            i--;\n            r++;\n        }\n        if(ans1.size()>ans2.size()){\n        return ans1;}\n        return ans2;\n\n    }\n    string longestPalindrome(string s) {\n        int maxlen=0;\n        string ans= \"\";\n        for(int i=0; i<s.size();i++){\n            string temp= helper(s,i);\n            int len = temp.size();\n            if(len>maxlen){\n                maxlen=len;\n                ans = temp;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"101101000001101110001111111001001000100011000101100111001001110100111000010000001010001101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"longest-palindromic-substring","has_notes":false}