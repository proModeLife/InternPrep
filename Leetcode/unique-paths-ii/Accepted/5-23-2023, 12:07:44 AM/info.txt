{"id":955312846,"lang":"python3","lang_name":"Python3","time":"2 weeks, 2 days","timestamp":1684780664,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/955312846/","is_pending":"Not Pending","title":"Unique Paths II","memory":"16.4 MB","code":"class Solution:\n    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:\n        M, N = len(obstacleGrid), len(obstacleGrid[0])\n        dp = [0] * N\n        dp[N-1] = 1\n\n        # Time: O(N*M), Space: O(N)\n        for r in reversed(range(M)):\n            for c in reversed(range(N)):\n                if obstacleGrid[r][c]:\n                    dp[c] = 0\n                elif c + 1 < N:\n                    dp[c] = dp[c] + dp[c + 1]\n        return dp[0]\n","compare_result":"11111111111111111111111111111111111111111","title_slug":"unique-paths-ii","has_notes":false}